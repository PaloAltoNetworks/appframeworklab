# FILENAME
# panorama_setup.yml
#
# DESCRIPTION
# Set up Panorama
#
# REQUIREMENTS
# pip install boto3
# pip install botocore
# pip install ansible
# ansible-galaxy install git+https://github.com/fvigo/ansible-pan.git
#
# STEPS
# update vars.yml with your own credentials/settings
#
# Good practice: The var files are provided in cleartext. They should be edited and encrypred using:
# ansible-vault encrypt firewall-secrets.yml
#
# EXECUTE
# ansible-playbook panorama_setup.yml
---
- hosts: localhost
  connection: local
  gather_facts: False

  roles:
    - role: ansible-pan

  tasks:
    # Load variables
    - name: Panorama Include variables (free-form)
      include_vars: vars.yml
      no_log: 'yes'

    # Wait for SSH
    - name: Panorama Wait for SSH prompt
      wait_for: port=22 host="{{pano_ip}}" timeout=900

    # Set serial and admin password
    - name: Panorama Set admin password and serial
      panorama_pass_serial:
        ip_address="{{pano_ip}}"
        key_filename="{{key_filename}}"
        newpassword="{{admin_password}}"
        serial="{{pano_serial}}"
      register: result
      until: not result is failed
      retries: 30
      delay: 30

    # Set Management Configuration
    - name: Panorama Set Management Config
      panos_mgtconfig:
        ip_address: "{{pano_ip}}"
        username: "{{admin_username}}"
        password: "{{admin_password}}"
        dns_server_primary: "8.8.8.8"
        dns_server_secondary: "8.8.4.4"
        ntp_server_primary: "169.254.169.123"
        hostname: "{{pano_hostname}}"
        domain: "{{domain}}"
        timezone: "{{timezone}}"
      register: result
      until: not result is failed
      retries: 2
      delay: 60        

    # Fetch Licenses
    - name: Panorama Fetch licenses
      panos_op:
        ip_address: "{{pano_ip}}"
        username: "{{admin_username}}"
        password: "{{admin_password}}"
        cmd: 'request license fetch'
      register: result
      until: not result is failed
      retries: 2
      delay: 60        

    #  Upgrade Panorama software to requested version
    - name: Panorama Upgrade software
      panos_software:
        ip_address: "{{pano_ip}}"
        username: "{{admin_username}}"
        password: "{{admin_password}}"
        version: "{{panos_version}}"
      register: result
      until: not result is failed
      retries: 15
      delay: 60        

    # check for 10 times, every 30 seconds, if Panorama
    # is ready, using credentials admin/admin
    - name: Panorama Wait for reboot
      panos_check:
        ip_address: "{{pano_ip}}"
        username: "{{admin_username}}"
        password: "{{admin_password}}"
      register: result
      until: not result is failed
      retries: 10
      delay: 30

    # update content to latest release
    - name: Panorama Update Content
      panos_content:
        ip_address: "{{pano_ip}}"
        username: "{{admin_username}}"
        password: "{{admin_password}}"
        wildfire_update: yes
        content_update: yes
        anti_virus_update: yes
      register: result
      until: not result is failed
      retries: 2
      delay: 60

    # Install Cloud Services Plugin
    - name: Panorama Install cloud services plugin
      panorama_plugin:
        ip_address: "{{pano_ip}}"
        password: "{{admin_password}}"
        plugin: "{{cloud_plugin_name}}"
        version: "{{cloud_plugin_version}}"
      register: result
      until: not result is failed
      retries: 2
      delay: 60        
